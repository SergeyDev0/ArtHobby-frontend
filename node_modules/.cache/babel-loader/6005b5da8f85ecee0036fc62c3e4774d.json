{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.UsePipes = void 0;\n\nconst constants_1 = require(\"../../constants\");\n\nconst extend_metadata_util_1 = require(\"../../utils/extend-metadata.util\");\n\nconst shared_utils_1 = require(\"../../utils/shared.utils\");\n\nconst validate_each_util_1 = require(\"../../utils/validate-each.util\");\n/**\n * Decorator that binds pipes to the scope of the controller or method,\n * depending on its context.\n *\n * When `@UsePipes` is used at the controller level, the pipe will be\n * applied to every handler (method) in the controller.\n *\n * When `@UsePipes` is used at the individual handler level, the pipe\n * will apply only to that specific method.\n *\n * @param pipes a single pipe instance or class, or a list of pipe instances or\n * classes.\n *\n * @see [Pipes](https://docs.nestjs.com/pipes)\n *\n * @usageNotes\n * Pipes can also be set up globally for all controllers and routes\n * using `app.useGlobalPipes()`.  [See here for details](https://docs.nestjs.com/pipes#class-validator)\n *\n * @publicApi\n */\n\n\nfunction UsePipes() {\n  for (var _len = arguments.length, pipes = new Array(_len), _key = 0; _key < _len; _key++) {\n    pipes[_key] = arguments[_key];\n  }\n\n  return (target, key, descriptor) => {\n    const isPipeValid = pipe => pipe && ((0, shared_utils_1.isFunction)(pipe) || (0, shared_utils_1.isFunction)(pipe.transform));\n\n    if (descriptor) {\n      (0, extend_metadata_util_1.extendArrayMetadata)(constants_1.PIPES_METADATA, pipes, descriptor.value);\n      return descriptor;\n    }\n\n    (0, validate_each_util_1.validateEach)(target, pipes, isPipeValid, '@UsePipes', 'pipe');\n    (0, extend_metadata_util_1.extendArrayMetadata)(constants_1.PIPES_METADATA, pipes, target);\n    return target;\n  };\n}\n\nexports.UsePipes = UsePipes;","map":{"version":3,"names":["Object","defineProperty","exports","value","UsePipes","constants_1","require","extend_metadata_util_1","shared_utils_1","validate_each_util_1","pipes","target","key","descriptor","isPipeValid","pipe","isFunction","transform","extendArrayMetadata","PIPES_METADATA","validateEach"],"sources":["C:/Users/Admin/Desktop/NikeShoes/node_modules/@nestjs/common/decorators/core/use-pipes.decorator.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.UsePipes = void 0;\nconst constants_1 = require(\"../../constants\");\nconst extend_metadata_util_1 = require(\"../../utils/extend-metadata.util\");\nconst shared_utils_1 = require(\"../../utils/shared.utils\");\nconst validate_each_util_1 = require(\"../../utils/validate-each.util\");\n/**\n * Decorator that binds pipes to the scope of the controller or method,\n * depending on its context.\n *\n * When `@UsePipes` is used at the controller level, the pipe will be\n * applied to every handler (method) in the controller.\n *\n * When `@UsePipes` is used at the individual handler level, the pipe\n * will apply only to that specific method.\n *\n * @param pipes a single pipe instance or class, or a list of pipe instances or\n * classes.\n *\n * @see [Pipes](https://docs.nestjs.com/pipes)\n *\n * @usageNotes\n * Pipes can also be set up globally for all controllers and routes\n * using `app.useGlobalPipes()`.  [See here for details](https://docs.nestjs.com/pipes#class-validator)\n *\n * @publicApi\n */\nfunction UsePipes(...pipes) {\n    return (target, key, descriptor) => {\n        const isPipeValid = (pipe) => pipe &&\n            ((0, shared_utils_1.isFunction)(pipe) || (0, shared_utils_1.isFunction)(pipe.transform));\n        if (descriptor) {\n            (0, extend_metadata_util_1.extendArrayMetadata)(constants_1.PIPES_METADATA, pipes, descriptor.value);\n            return descriptor;\n        }\n        (0, validate_each_util_1.validateEach)(target, pipes, isPipeValid, '@UsePipes', 'pipe');\n        (0, extend_metadata_util_1.extendArrayMetadata)(constants_1.PIPES_METADATA, pipes, target);\n        return target;\n    };\n}\nexports.UsePipes = UsePipes;\n"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAAEC,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,QAAR,GAAmB,KAAK,CAAxB;;AACA,MAAMC,WAAW,GAAGC,OAAO,CAAC,iBAAD,CAA3B;;AACA,MAAMC,sBAAsB,GAAGD,OAAO,CAAC,kCAAD,CAAtC;;AACA,MAAME,cAAc,GAAGF,OAAO,CAAC,0BAAD,CAA9B;;AACA,MAAMG,oBAAoB,GAAGH,OAAO,CAAC,gCAAD,CAApC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASF,QAAT,GAA4B;EAAA,kCAAPM,KAAO;IAAPA,KAAO;EAAA;;EACxB,OAAO,CAACC,MAAD,EAASC,GAAT,EAAcC,UAAd,KAA6B;IAChC,MAAMC,WAAW,GAAIC,IAAD,IAAUA,IAAI,KAC7B,CAAC,GAAGP,cAAc,CAACQ,UAAnB,EAA+BD,IAA/B,KAAwC,CAAC,GAAGP,cAAc,CAACQ,UAAnB,EAA+BD,IAAI,CAACE,SAApC,CADX,CAAlC;;IAEA,IAAIJ,UAAJ,EAAgB;MACZ,CAAC,GAAGN,sBAAsB,CAACW,mBAA3B,EAAgDb,WAAW,CAACc,cAA5D,EAA4ET,KAA5E,EAAmFG,UAAU,CAACV,KAA9F;MACA,OAAOU,UAAP;IACH;;IACD,CAAC,GAAGJ,oBAAoB,CAACW,YAAzB,EAAuCT,MAAvC,EAA+CD,KAA/C,EAAsDI,WAAtD,EAAmE,WAAnE,EAAgF,MAAhF;IACA,CAAC,GAAGP,sBAAsB,CAACW,mBAA3B,EAAgDb,WAAW,CAACc,cAA5D,EAA4ET,KAA5E,EAAmFC,MAAnF;IACA,OAAOA,MAAP;EACH,CAVD;AAWH;;AACDT,OAAO,CAACE,QAAR,GAAmBA,QAAnB"},"metadata":{},"sourceType":"script"}