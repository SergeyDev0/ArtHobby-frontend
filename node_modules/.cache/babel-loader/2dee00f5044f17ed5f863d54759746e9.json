{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isLogLevelEnabled = void 0;\nconst LOG_LEVEL_VALUES = {\n  debug: 0,\n  verbose: 1,\n  log: 2,\n  warn: 3,\n  error: 4\n};\n/**\n * Checks if target level is enabled.\n * @param targetLevel target level\n * @param logLevels array of enabled log levels\n */\n\nfunction isLogLevelEnabled(targetLevel, logLevels) {\n  var _a;\n\n  if (!logLevels || Array.isArray(logLevels) && (logLevels === null || logLevels === void 0 ? void 0 : logLevels.length) === 0) {\n    return false;\n  }\n\n  if (logLevels.includes(targetLevel)) {\n    return true;\n  }\n\n  const highestLogLevelValue = (_a = logLevels.map(level => LOG_LEVEL_VALUES[level]).sort((a, b) => b - a)) === null || _a === void 0 ? void 0 : _a[0];\n  const targetLevelValue = LOG_LEVEL_VALUES[targetLevel];\n  return targetLevelValue >= highestLogLevelValue;\n}\n\nexports.isLogLevelEnabled = isLogLevelEnabled;","map":{"version":3,"names":["Object","defineProperty","exports","value","isLogLevelEnabled","LOG_LEVEL_VALUES","debug","verbose","log","warn","error","targetLevel","logLevels","_a","Array","isArray","length","includes","highestLogLevelValue","map","level","sort","a","b","targetLevelValue"],"sources":["C:/Users/Admin/Desktop/NikeShoes/node_modules/@nestjs/common/services/utils/is-log-level-enabled.util.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isLogLevelEnabled = void 0;\nconst LOG_LEVEL_VALUES = {\n    debug: 0,\n    verbose: 1,\n    log: 2,\n    warn: 3,\n    error: 4,\n};\n/**\n * Checks if target level is enabled.\n * @param targetLevel target level\n * @param logLevels array of enabled log levels\n */\nfunction isLogLevelEnabled(targetLevel, logLevels) {\n    var _a;\n    if (!logLevels || (Array.isArray(logLevels) && (logLevels === null || logLevels === void 0 ? void 0 : logLevels.length) === 0)) {\n        return false;\n    }\n    if (logLevels.includes(targetLevel)) {\n        return true;\n    }\n    const highestLogLevelValue = (_a = logLevels\n        .map(level => LOG_LEVEL_VALUES[level])\n        .sort((a, b) => b - a)) === null || _a === void 0 ? void 0 : _a[0];\n    const targetLevelValue = LOG_LEVEL_VALUES[targetLevel];\n    return targetLevelValue >= highestLogLevelValue;\n}\nexports.isLogLevelEnabled = isLogLevelEnabled;\n"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAAEC,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,iBAAR,GAA4B,KAAK,CAAjC;AACA,MAAMC,gBAAgB,GAAG;EACrBC,KAAK,EAAE,CADc;EAErBC,OAAO,EAAE,CAFY;EAGrBC,GAAG,EAAE,CAHgB;EAIrBC,IAAI,EAAE,CAJe;EAKrBC,KAAK,EAAE;AALc,CAAzB;AAOA;AACA;AACA;AACA;AACA;;AACA,SAASN,iBAAT,CAA2BO,WAA3B,EAAwCC,SAAxC,EAAmD;EAC/C,IAAIC,EAAJ;;EACA,IAAI,CAACD,SAAD,IAAeE,KAAK,CAACC,OAAN,CAAcH,SAAd,KAA4B,CAACA,SAAS,KAAK,IAAd,IAAsBA,SAAS,KAAK,KAAK,CAAzC,GAA6C,KAAK,CAAlD,GAAsDA,SAAS,CAACI,MAAjE,MAA6E,CAA5H,EAAgI;IAC5H,OAAO,KAAP;EACH;;EACD,IAAIJ,SAAS,CAACK,QAAV,CAAmBN,WAAnB,CAAJ,EAAqC;IACjC,OAAO,IAAP;EACH;;EACD,MAAMO,oBAAoB,GAAG,CAACL,EAAE,GAAGD,SAAS,CACvCO,GAD8B,CAC1BC,KAAK,IAAIf,gBAAgB,CAACe,KAAD,CADC,EAE9BC,IAF8B,CAEzB,CAACC,CAAD,EAAIC,CAAJ,KAAUA,CAAC,GAAGD,CAFW,CAAN,MAEG,IAFH,IAEWT,EAAE,KAAK,KAAK,CAFvB,GAE2B,KAAK,CAFhC,GAEoCA,EAAE,CAAC,CAAD,CAFnE;EAGA,MAAMW,gBAAgB,GAAGnB,gBAAgB,CAACM,WAAD,CAAzC;EACA,OAAOa,gBAAgB,IAAIN,oBAA3B;AACH;;AACDhB,OAAO,CAACE,iBAAR,GAA4BA,iBAA5B"},"metadata":{},"sourceType":"script"}