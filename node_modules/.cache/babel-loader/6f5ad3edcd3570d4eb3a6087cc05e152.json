{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Controller = void 0;\n\nconst constants_1 = require(\"../../constants\");\n\nconst shared_utils_1 = require(\"../../utils/shared.utils\");\n/**\n * Decorator that marks a class as a Nest controller that can receive inbound\n * requests and produce responses.\n *\n * An HTTP Controller responds to inbound HTTP Requests and produces HTTP Responses.\n * It defines a class that provides the context for one or more related route\n * handlers that correspond to HTTP request methods and associated routes\n * for example `GET /api/profile`, `POST /users/resume`\n *\n * A Microservice Controller responds to requests as well as events, running over\n * a variety of transports [(read more here)](https://docs.nestjs.com/microservices/basics).\n * It defines a class that provides a context for one or more message or event\n * handlers.\n *\n * @param prefixOrOptions a `route path prefix` or a `ControllerOptions` object.\n * A `route path prefix` is pre-pended to the path specified in any request decorator\n * in the class. `ControllerOptions` is an options configuration object specifying:\n * - `scope` - symbol that determines the lifetime of a Controller instance.\n * [See Scope](https://docs.nestjs.com/fundamentals/injection-scopes#usage) for\n * more details.\n * - `prefix` - string that defines a `route path prefix`.  The prefix\n * is pre-pended to the path specified in any request decorator in the class.\n * - `version` - string, array of strings, or Symbol that defines the version\n * of all routes in the class. [See Versioning](https://docs.nestjs.com/techniques/versioning)\n * for more details.\n *\n * @see [Routing](https://docs.nestjs.com/controllers#routing)\n * @see [Controllers](https://docs.nestjs.com/controllers)\n * @see [Microservices](https://docs.nestjs.com/microservices/basics#request-response)\n * @see [Scope](https://docs.nestjs.com/fundamentals/injection-scopes#usage)\n * @see [Versioning](https://docs.nestjs.com/techniques/versioning)\n *\n * @publicApi\n */\n\n\nfunction Controller(prefixOrOptions) {\n  const defaultPath = '/';\n  const [path, host, scopeOptions, versionOptions] = (0, shared_utils_1.isUndefined)(prefixOrOptions) ? [defaultPath, undefined, undefined, undefined] : (0, shared_utils_1.isString)(prefixOrOptions) || Array.isArray(prefixOrOptions) ? [prefixOrOptions, undefined, undefined, undefined] : [prefixOrOptions.path || defaultPath, prefixOrOptions.host, {\n    scope: prefixOrOptions.scope,\n    durable: prefixOrOptions.durable\n  }, Array.isArray(prefixOrOptions.version) ? Array.from(new Set(prefixOrOptions.version)) : prefixOrOptions.version];\n  return target => {\n    Reflect.defineMetadata(constants_1.CONTROLLER_WATERMARK, true, target);\n    Reflect.defineMetadata(constants_1.PATH_METADATA, path, target);\n    Reflect.defineMetadata(constants_1.HOST_METADATA, host, target);\n    Reflect.defineMetadata(constants_1.SCOPE_OPTIONS_METADATA, scopeOptions, target);\n    Reflect.defineMetadata(constants_1.VERSION_METADATA, versionOptions, target);\n  };\n}\n\nexports.Controller = Controller;","map":{"version":3,"names":["Object","defineProperty","exports","value","Controller","constants_1","require","shared_utils_1","prefixOrOptions","defaultPath","path","host","scopeOptions","versionOptions","isUndefined","undefined","isString","Array","isArray","scope","durable","version","from","Set","target","Reflect","defineMetadata","CONTROLLER_WATERMARK","PATH_METADATA","HOST_METADATA","SCOPE_OPTIONS_METADATA","VERSION_METADATA"],"sources":["C:/Users/Admin/Desktop/NikeShoes/node_modules/@nestjs/common/decorators/core/controller.decorator.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Controller = void 0;\nconst constants_1 = require(\"../../constants\");\nconst shared_utils_1 = require(\"../../utils/shared.utils\");\n/**\n * Decorator that marks a class as a Nest controller that can receive inbound\n * requests and produce responses.\n *\n * An HTTP Controller responds to inbound HTTP Requests and produces HTTP Responses.\n * It defines a class that provides the context for one or more related route\n * handlers that correspond to HTTP request methods and associated routes\n * for example `GET /api/profile`, `POST /users/resume`\n *\n * A Microservice Controller responds to requests as well as events, running over\n * a variety of transports [(read more here)](https://docs.nestjs.com/microservices/basics).\n * It defines a class that provides a context for one or more message or event\n * handlers.\n *\n * @param prefixOrOptions a `route path prefix` or a `ControllerOptions` object.\n * A `route path prefix` is pre-pended to the path specified in any request decorator\n * in the class. `ControllerOptions` is an options configuration object specifying:\n * - `scope` - symbol that determines the lifetime of a Controller instance.\n * [See Scope](https://docs.nestjs.com/fundamentals/injection-scopes#usage) for\n * more details.\n * - `prefix` - string that defines a `route path prefix`.  The prefix\n * is pre-pended to the path specified in any request decorator in the class.\n * - `version` - string, array of strings, or Symbol that defines the version\n * of all routes in the class. [See Versioning](https://docs.nestjs.com/techniques/versioning)\n * for more details.\n *\n * @see [Routing](https://docs.nestjs.com/controllers#routing)\n * @see [Controllers](https://docs.nestjs.com/controllers)\n * @see [Microservices](https://docs.nestjs.com/microservices/basics#request-response)\n * @see [Scope](https://docs.nestjs.com/fundamentals/injection-scopes#usage)\n * @see [Versioning](https://docs.nestjs.com/techniques/versioning)\n *\n * @publicApi\n */\nfunction Controller(prefixOrOptions) {\n    const defaultPath = '/';\n    const [path, host, scopeOptions, versionOptions] = (0, shared_utils_1.isUndefined)(prefixOrOptions)\n        ? [defaultPath, undefined, undefined, undefined]\n        : (0, shared_utils_1.isString)(prefixOrOptions) || Array.isArray(prefixOrOptions)\n            ? [prefixOrOptions, undefined, undefined, undefined]\n            : [\n                prefixOrOptions.path || defaultPath,\n                prefixOrOptions.host,\n                { scope: prefixOrOptions.scope, durable: prefixOrOptions.durable },\n                Array.isArray(prefixOrOptions.version)\n                    ? Array.from(new Set(prefixOrOptions.version))\n                    : prefixOrOptions.version,\n            ];\n    return (target) => {\n        Reflect.defineMetadata(constants_1.CONTROLLER_WATERMARK, true, target);\n        Reflect.defineMetadata(constants_1.PATH_METADATA, path, target);\n        Reflect.defineMetadata(constants_1.HOST_METADATA, host, target);\n        Reflect.defineMetadata(constants_1.SCOPE_OPTIONS_METADATA, scopeOptions, target);\n        Reflect.defineMetadata(constants_1.VERSION_METADATA, versionOptions, target);\n    };\n}\nexports.Controller = Controller;\n"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAAEC,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,UAAR,GAAqB,KAAK,CAA1B;;AACA,MAAMC,WAAW,GAAGC,OAAO,CAAC,iBAAD,CAA3B;;AACA,MAAMC,cAAc,GAAGD,OAAO,CAAC,0BAAD,CAA9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASF,UAAT,CAAoBI,eAApB,EAAqC;EACjC,MAAMC,WAAW,GAAG,GAApB;EACA,MAAM,CAACC,IAAD,EAAOC,IAAP,EAAaC,YAAb,EAA2BC,cAA3B,IAA6C,CAAC,GAAGN,cAAc,CAACO,WAAnB,EAAgCN,eAAhC,IAC7C,CAACC,WAAD,EAAcM,SAAd,EAAyBA,SAAzB,EAAoCA,SAApC,CAD6C,GAE7C,CAAC,GAAGR,cAAc,CAACS,QAAnB,EAA6BR,eAA7B,KAAiDS,KAAK,CAACC,OAAN,CAAcV,eAAd,CAAjD,GACI,CAACA,eAAD,EAAkBO,SAAlB,EAA6BA,SAA7B,EAAwCA,SAAxC,CADJ,GAEI,CACEP,eAAe,CAACE,IAAhB,IAAwBD,WAD1B,EAEED,eAAe,CAACG,IAFlB,EAGE;IAAEQ,KAAK,EAAEX,eAAe,CAACW,KAAzB;IAAgCC,OAAO,EAAEZ,eAAe,CAACY;EAAzD,CAHF,EAIEH,KAAK,CAACC,OAAN,CAAcV,eAAe,CAACa,OAA9B,IACMJ,KAAK,CAACK,IAAN,CAAW,IAAIC,GAAJ,CAAQf,eAAe,CAACa,OAAxB,CAAX,CADN,GAEMb,eAAe,CAACa,OANxB,CAJV;EAYA,OAAQG,MAAD,IAAY;IACfC,OAAO,CAACC,cAAR,CAAuBrB,WAAW,CAACsB,oBAAnC,EAAyD,IAAzD,EAA+DH,MAA/D;IACAC,OAAO,CAACC,cAAR,CAAuBrB,WAAW,CAACuB,aAAnC,EAAkDlB,IAAlD,EAAwDc,MAAxD;IACAC,OAAO,CAACC,cAAR,CAAuBrB,WAAW,CAACwB,aAAnC,EAAkDlB,IAAlD,EAAwDa,MAAxD;IACAC,OAAO,CAACC,cAAR,CAAuBrB,WAAW,CAACyB,sBAAnC,EAA2DlB,YAA3D,EAAyEY,MAAzE;IACAC,OAAO,CAACC,cAAR,CAAuBrB,WAAW,CAAC0B,gBAAnC,EAAqDlB,cAArD,EAAqEW,MAArE;EACH,CAND;AAOH;;AACDtB,OAAO,CAACE,UAAR,GAAqBA,UAArB"},"metadata":{},"sourceType":"script"}