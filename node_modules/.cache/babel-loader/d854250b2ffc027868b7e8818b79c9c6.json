{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.UseFilters = void 0;\n/* eslint-disable @typescript-eslint/no-use-before-define */\n\nconst constants_1 = require(\"../../constants\");\n\nconst extend_metadata_util_1 = require(\"../../utils/extend-metadata.util\");\n\nconst shared_utils_1 = require(\"../../utils/shared.utils\");\n\nconst validate_each_util_1 = require(\"../../utils/validate-each.util\");\n/**\n * Decorator that binds exception filters to the scope of the controller or\n * method, depending on its context.\n *\n * When `@UseFilters` is used at the controller level, the filter will be\n * applied to every handler (method) in the controller.\n *\n * When `@UseFilters` is used at the individual handler level, the filter\n * will apply only to that specific method.\n *\n * @param filters exception filter instance or class, or a list of exception\n * filter instances or classes.\n *\n * @see [Exception filters](https://docs.nestjs.com/exception-filters)\n *\n * @usageNotes\n * Exception filters can also be set up globally for all controllers and routes\n * using `app.useGlobalFilters()`.  [See here for details](https://docs.nestjs.com/exception-filters#binding-filters)\n *\n * @publicApi\n */\n\n\nconst UseFilters = function () {\n  return addExceptionFiltersMetadata(...arguments);\n};\n\nexports.UseFilters = UseFilters;\n\nfunction addExceptionFiltersMetadata() {\n  for (var _len = arguments.length, filters = new Array(_len), _key = 0; _key < _len; _key++) {\n    filters[_key] = arguments[_key];\n  }\n\n  return (target, key, descriptor) => {\n    const isFilterValid = filter => filter && ((0, shared_utils_1.isFunction)(filter) || (0, shared_utils_1.isFunction)(filter.catch));\n\n    if (descriptor) {\n      (0, validate_each_util_1.validateEach)(target.constructor, filters, isFilterValid, '@UseFilters', 'filter');\n      (0, extend_metadata_util_1.extendArrayMetadata)(constants_1.EXCEPTION_FILTERS_METADATA, filters, descriptor.value);\n      return descriptor;\n    }\n\n    (0, validate_each_util_1.validateEach)(target, filters, isFilterValid, '@UseFilters', 'filter');\n    (0, extend_metadata_util_1.extendArrayMetadata)(constants_1.EXCEPTION_FILTERS_METADATA, filters, target);\n    return target;\n  };\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","UseFilters","constants_1","require","extend_metadata_util_1","shared_utils_1","validate_each_util_1","addExceptionFiltersMetadata","filters","target","key","descriptor","isFilterValid","filter","isFunction","catch","validateEach","constructor","extendArrayMetadata","EXCEPTION_FILTERS_METADATA"],"sources":["C:/Users/Admin/Desktop/NikeShoes/node_modules/@nestjs/common/decorators/core/exception-filters.decorator.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.UseFilters = void 0;\n/* eslint-disable @typescript-eslint/no-use-before-define */\nconst constants_1 = require(\"../../constants\");\nconst extend_metadata_util_1 = require(\"../../utils/extend-metadata.util\");\nconst shared_utils_1 = require(\"../../utils/shared.utils\");\nconst validate_each_util_1 = require(\"../../utils/validate-each.util\");\n/**\n * Decorator that binds exception filters to the scope of the controller or\n * method, depending on its context.\n *\n * When `@UseFilters` is used at the controller level, the filter will be\n * applied to every handler (method) in the controller.\n *\n * When `@UseFilters` is used at the individual handler level, the filter\n * will apply only to that specific method.\n *\n * @param filters exception filter instance or class, or a list of exception\n * filter instances or classes.\n *\n * @see [Exception filters](https://docs.nestjs.com/exception-filters)\n *\n * @usageNotes\n * Exception filters can also be set up globally for all controllers and routes\n * using `app.useGlobalFilters()`.  [See here for details](https://docs.nestjs.com/exception-filters#binding-filters)\n *\n * @publicApi\n */\nconst UseFilters = (...filters) => addExceptionFiltersMetadata(...filters);\nexports.UseFilters = UseFilters;\nfunction addExceptionFiltersMetadata(...filters) {\n    return (target, key, descriptor) => {\n        const isFilterValid = (filter) => filter &&\n            ((0, shared_utils_1.isFunction)(filter) || (0, shared_utils_1.isFunction)(filter.catch));\n        if (descriptor) {\n            (0, validate_each_util_1.validateEach)(target.constructor, filters, isFilterValid, '@UseFilters', 'filter');\n            (0, extend_metadata_util_1.extendArrayMetadata)(constants_1.EXCEPTION_FILTERS_METADATA, filters, descriptor.value);\n            return descriptor;\n        }\n        (0, validate_each_util_1.validateEach)(target, filters, isFilterValid, '@UseFilters', 'filter');\n        (0, extend_metadata_util_1.extendArrayMetadata)(constants_1.EXCEPTION_FILTERS_METADATA, filters, target);\n        return target;\n    };\n}\n"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAAEC,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,UAAR,GAAqB,KAAK,CAA1B;AACA;;AACA,MAAMC,WAAW,GAAGC,OAAO,CAAC,iBAAD,CAA3B;;AACA,MAAMC,sBAAsB,GAAGD,OAAO,CAAC,kCAAD,CAAtC;;AACA,MAAME,cAAc,GAAGF,OAAO,CAAC,0BAAD,CAA9B;;AACA,MAAMG,oBAAoB,GAAGH,OAAO,CAAC,gCAAD,CAApC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAMF,UAAU,GAAG;EAAA,OAAgBM,2BAA2B,CAAC,YAAD,CAA3C;AAAA,CAAnB;;AACAR,OAAO,CAACE,UAAR,GAAqBA,UAArB;;AACA,SAASM,2BAAT,GAAiD;EAAA,kCAATC,OAAS;IAATA,OAAS;EAAA;;EAC7C,OAAO,CAACC,MAAD,EAASC,GAAT,EAAcC,UAAd,KAA6B;IAChC,MAAMC,aAAa,GAAIC,MAAD,IAAYA,MAAM,KACnC,CAAC,GAAGR,cAAc,CAACS,UAAnB,EAA+BD,MAA/B,KAA0C,CAAC,GAAGR,cAAc,CAACS,UAAnB,EAA+BD,MAAM,CAACE,KAAtC,CADP,CAAxC;;IAEA,IAAIJ,UAAJ,EAAgB;MACZ,CAAC,GAAGL,oBAAoB,CAACU,YAAzB,EAAuCP,MAAM,CAACQ,WAA9C,EAA2DT,OAA3D,EAAoEI,aAApE,EAAmF,aAAnF,EAAkG,QAAlG;MACA,CAAC,GAAGR,sBAAsB,CAACc,mBAA3B,EAAgDhB,WAAW,CAACiB,0BAA5D,EAAwFX,OAAxF,EAAiGG,UAAU,CAACX,KAA5G;MACA,OAAOW,UAAP;IACH;;IACD,CAAC,GAAGL,oBAAoB,CAACU,YAAzB,EAAuCP,MAAvC,EAA+CD,OAA/C,EAAwDI,aAAxD,EAAuE,aAAvE,EAAsF,QAAtF;IACA,CAAC,GAAGR,sBAAsB,CAACc,mBAA3B,EAAgDhB,WAAW,CAACiB,0BAA5D,EAAwFX,OAAxF,EAAiGC,MAAjG;IACA,OAAOA,MAAP;EACH,CAXD;AAYH"},"metadata":{},"sourceType":"script"}