{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SetMetadata = void 0;\n/**\n * Decorator that assigns metadata to the class/function using the\n * specified `key`.\n *\n * Requires two parameters:\n * - `key` - a value defining the key under which the metadata is stored\n * - `value` - metadata to be associated with `key`\n *\n * This metadata can be reflected using the `Reflector` class.\n *\n * Example: `@SetMetadata('roles', ['admin'])`\n *\n * @see [Reflection](https://docs.nestjs.com/guards#reflection)\n *\n * @publicApi\n */\n\nconst SetMetadata = (metadataKey, metadataValue) => {\n  const decoratorFactory = (target, key, descriptor) => {\n    if (descriptor) {\n      Reflect.defineMetadata(metadataKey, metadataValue, descriptor.value);\n      return descriptor;\n    }\n\n    Reflect.defineMetadata(metadataKey, metadataValue, target);\n    return target;\n  };\n\n  decoratorFactory.KEY = metadataKey;\n  return decoratorFactory;\n};\n\nexports.SetMetadata = SetMetadata;","map":{"version":3,"names":["Object","defineProperty","exports","value","SetMetadata","metadataKey","metadataValue","decoratorFactory","target","key","descriptor","Reflect","defineMetadata","KEY"],"sources":["C:/Users/Admin/Desktop/NikeShoes/node_modules/@nestjs/common/decorators/core/set-metadata.decorator.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SetMetadata = void 0;\n/**\n * Decorator that assigns metadata to the class/function using the\n * specified `key`.\n *\n * Requires two parameters:\n * - `key` - a value defining the key under which the metadata is stored\n * - `value` - metadata to be associated with `key`\n *\n * This metadata can be reflected using the `Reflector` class.\n *\n * Example: `@SetMetadata('roles', ['admin'])`\n *\n * @see [Reflection](https://docs.nestjs.com/guards#reflection)\n *\n * @publicApi\n */\nconst SetMetadata = (metadataKey, metadataValue) => {\n    const decoratorFactory = (target, key, descriptor) => {\n        if (descriptor) {\n            Reflect.defineMetadata(metadataKey, metadataValue, descriptor.value);\n            return descriptor;\n        }\n        Reflect.defineMetadata(metadataKey, metadataValue, target);\n        return target;\n    };\n    decoratorFactory.KEY = metadataKey;\n    return decoratorFactory;\n};\nexports.SetMetadata = SetMetadata;\n"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAAEC,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,WAAR,GAAsB,KAAK,CAA3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMA,WAAW,GAAG,CAACC,WAAD,EAAcC,aAAd,KAAgC;EAChD,MAAMC,gBAAgB,GAAG,CAACC,MAAD,EAASC,GAAT,EAAcC,UAAd,KAA6B;IAClD,IAAIA,UAAJ,EAAgB;MACZC,OAAO,CAACC,cAAR,CAAuBP,WAAvB,EAAoCC,aAApC,EAAmDI,UAAU,CAACP,KAA9D;MACA,OAAOO,UAAP;IACH;;IACDC,OAAO,CAACC,cAAR,CAAuBP,WAAvB,EAAoCC,aAApC,EAAmDE,MAAnD;IACA,OAAOA,MAAP;EACH,CAPD;;EAQAD,gBAAgB,CAACM,GAAjB,GAAuBR,WAAvB;EACA,OAAOE,gBAAP;AACH,CAXD;;AAYAL,OAAO,CAACE,WAAR,GAAsBA,WAAtB"},"metadata":{},"sourceType":"script"}